diff -ur redmine-1.2.0.orig/app/controllers/application_controller.rb redmine-1.2.0/app/controllers/application_controller.rb
--- redmine-1.2.0.orig/app/controllers/application_controller.rb	2011-05-30 18:51:16.000000000 +0200
+++ redmine-1.2.0/app/controllers/application_controller.rb	2011-07-08 12:32:03.834489185 +0200
@@ -383,9 +383,9 @@
   def parse_qvalues(value)
     tmp = []
     if value
-      parts = value.split(/,\s*/)
+      parts = value.split(/,[:space:]*/)
       parts.each {|part|
-        if m = %r{^([^\s,]+?)(?:;\s*q=(\d+(?:\.\d+)?))?$}.match(part)
+        if m = %r{^([^[:space:],]+?)(?:;[:space:]*q=(\d+(?:\.\d+)?))?$}.match(part)
           val = m[1]
           q = (m[2] or 1).to_f
           tmp.push([val, q])
diff -ur redmine-1.2.0.orig/app/controllers/journals_controller.rb redmine-1.2.0/app/controllers/journals_controller.rb
--- redmine-1.2.0.orig/app/controllers/journals_controller.rb	2011-05-30 18:51:16.000000000 +0200
+++ redmine-1.2.0/app/controllers/journals_controller.rb	2011-07-08 12:32:16.986489183 +0200
@@ -66,7 +66,7 @@
       text = @issue.description
     end
     # Replaces pre blocks with [...]
-    text = text.to_s.strip.gsub(%r{<pre>((.|\s)*?)</pre>}m, '[...]')
+    text = text.to_s.strip.gsub(%r{<pre>((.|[:space:])*?)</pre>}m, '[...]')
     content = "#{ll(Setting.default_language, :text_user_wrote, user)}\n> "
     content << text.gsub(/(\r?\n|\r\n?)/, "\n> ") + "\n\n"
       
diff -ur redmine-1.2.0.orig/app/controllers/messages_controller.rb redmine-1.2.0/app/controllers/messages_controller.rb
--- redmine-1.2.0.orig/app/controllers/messages_controller.rb	2011-05-30 18:51:16.000000000 +0200
+++ redmine-1.2.0/app/controllers/messages_controller.rb	2011-07-08 12:30:06.615489213 +0200
@@ -113,7 +113,7 @@
     subject = @message.subject.gsub('"', '\"')
     subject = "RE: #{subject}" unless subject.starts_with?('RE:')
     content = "#{ll(Setting.default_language, :text_user_wrote, user)}\\n> "
-    content << text.to_s.strip.gsub(%r{<pre>((.|\s)*?)</pre>}m, '[...]').gsub('"', '\"').gsub(/(\r?\n|\r\n?)/, "\\n> ") + "\\n\\n"
+    content << text.to_s.strip.gsub(%r{<pre>((.|[[:space:]])*?)</pre>}m, '[...]').gsub('"', '\"').gsub(/(\r?\n|\r\n?)/, "\\n> ") + "\\n\\n"
     render(:update) { |page|
       page << "$('reply_subject').value = \"#{subject}\";"
       page.<< "$('message_content').value = \"#{content}\";"
diff -ur redmine-1.2.0.orig/app/controllers/search_controller.rb redmine-1.2.0/app/controllers/search_controller.rb
--- redmine-1.2.0.orig/app/controllers/search_controller.rb	2011-05-30 18:51:16.000000000 +0200
+++ redmine-1.2.0/app/controllers/search_controller.rb	2011-07-08 12:30:06.615489213 +0200
@@ -61,7 +61,7 @@
     
     # extract tokens from the question
     # eg. hello "bye bye" => ["hello", "bye bye"]
-    @tokens = @question.scan(%r{((\s|^)"[\s\w]+"(\s|$)|\S+)}).collect {|m| m.first.gsub(%r{(^\s*"\s*|\s*"\s*$)}, '')}
+    @tokens = @question.scan(%r{(([[:space:]]|^)"[[:space:][:word:]]+"([[:space:]]|$)|[[:space:]]+)}).collect {|m| m.first.gsub(%r{(^[[:space:]]*"[[:space:]]*|[[:space:]]*"[[:space:]]*$)}, '')}
     # tokens must be at least 2 characters long
     @tokens = @tokens.uniq.select {|w| w.length > 1 }
     
diff -ur redmine-1.2.0.orig/app/helpers/application_helper.rb redmine-1.2.0/app/helpers/application_helper.rb
--- redmine-1.2.0.orig/app/helpers/application_helper.rb	2011-05-30 18:51:16.000000000 +0200
+++ redmine-1.2.0/app/helpers/application_helper.rb	2011-07-08 12:35:13.399489143 +0200
@@ -505,7 +505,7 @@
     # when using an image link, try to use an attachment, if possible
     if options[:attachments] || (obj && obj.respond_to?(:attachments))
       attachments = nil
-      text.gsub!(/src="([^\/"]+\.(bmp|gif|jpg|jpeg|png))"(\s+alt="([^"]*)")?/i) do |m|
+      text.gsub!(/src="([^\/"]+\.(bmp|gif|jpg|jpeg|png))"([:space:]+alt="([^"]*)")?/i) do |m|
         filename, ext, alt, alttext = $1.downcase, $2, $3, $4
         attachments ||= (options[:attachments] || obj.attachments).sort_by(&:created_on).reverse
         # search for the picture in attachments
@@ -603,7 +603,7 @@
   #     identifier:version:1.0.0
   #     identifier:source:some/file
   def parse_redmine_links(text, project, obj, attr, only_path, options)
-    text.gsub!(%r{([\s\(,\-\[\>]|^)(!)?(([a-z0-9\-]+):)?(attachment|document|version|commit|source|export|message|project)?((#|r)(\d+)|(:)([^"\s<>][^\s<>]*?|"[^"]+?"))(?=(?=[[:punct:]]\W)|,|\s|\]|<|$)}) do |m|
+    text.gsub!(%r{([[:space:]\(,\-\[\>]|^)(!)?(([a-z0-9\-]+):)?(attachment|document|version|commit|source|export|message|project)?((#|r)(\d+)|(:)([^"[:space:]<>][^[:space:]<>]*?|"[^"]+?"))(?=(?=[[:punct:]]\W)|,|[:space:]|\]|<|$)}) do |m|
       leading, esc, project_prefix, project_identifier, prefix, sep, identifier = $1, $2, $3, $4, $5, $7 || $9, $8 || $10
       link = nil
       if project_identifier
@@ -895,7 +895,7 @@
   end
 
   def sanitize_anchor_name(anchor)
-    anchor.gsub(%r{[^\w\s\-]}, '').gsub(%r{\s+(\-+\s*)?}, '-')
+    anchor.gsub(%r{[^[:word:][:space:]\-]}, '').gsub(%r{[:space:]+(\-+[:space:]*)?}, '-')
   end
 
   # Returns the javascript tags that are included in the html layout head
diff -ur redmine-1.2.0.orig/app/models/attachment.rb redmine-1.2.0/app/models/attachment.rb
--- redmine-1.2.0.orig/app/models/attachment.rb	2011-05-30 18:51:16.000000000 +0200
+++ redmine-1.2.0/app/models/attachment.rb	2011-07-08 12:34:32.404489152 +0200
@@ -169,7 +169,7 @@
     # INCORRECT: just_filename = File.basename(value.gsub('\\\\', '/'))
 
     # Finally, replace all non alphanumeric, hyphens or periods with underscore
-    @filename = just_filename.gsub(/[^\w\.\-]/,'_')
+    @filename = just_filename.gsub(/[^[:word:]\.\-]/,'_')
   end
 
   # Returns an ASCII or hashed filename
diff -ur redmine-1.2.0.orig/app/models/changeset.rb redmine-1.2.0/app/models/changeset.rb
--- redmine-1.2.0.orig/app/models/changeset.rb	2011-05-30 18:51:16.000000000 +0200
+++ redmine-1.2.0/app/models/changeset.rb	2011-07-08 12:32:32.970489180 +0200
@@ -114,11 +114,11 @@
 
     referenced_issues = []
 
-    comments.scan(/([\s\(\[,-]|^)((#{kw_regexp})[\s:]+)?(#\d+(\s+@#{TIMELOG_RE})?([\s,;&]+#\d+(\s+@#{TIMELOG_RE})?)*)(?=[[:punct:]]|\s|<|$)/i) do |match|
+    comments.scan(/([[:space:]\(\[,-]|^)((#{kw_regexp})[[:space:]:]+)?(#\d+([:space:]+@#{TIMELOG_RE})?([[:space:],;&]+#\d+([:space:]+@#{TIMELOG_RE})?)*)(?=[[:punct:]]|[:space:]|<|$)/i) do |match|
       action, refs = match[2], match[3]
       next unless action.present? || ref_keywords_any
 
-      refs.scan(/#(\d+)(\s+@#{TIMELOG_RE})?/).each do |m|
+      refs.scan(/#(\d+)([:space:]+@#{TIMELOG_RE})?/).each do |m|
         issue, hours = find_referenced_issue_by_id(m[0].to_i), m[2]
         if issue
           referenced_issues << issue
diff -ur redmine-1.2.0.orig/app/models/mail_handler.rb redmine-1.2.0/app/models/mail_handler.rb
--- redmine-1.2.0.orig/app/models/mail_handler.rb	2011-05-30 18:51:16.000000000 +0200
+++ redmine-1.2.0/app/models/mail_handler.rb	2011-07-08 12:32:45.277489177 +0200
@@ -246,7 +246,7 @@
     keys.reject! {|k| k.blank?}
     keys.collect! {|k| Regexp.escape(k)}
     format ||= '.+'
-    text.gsub!(/^(#{keys.join('|')})[ \t]*:[ \t]*(#{format})\s*$/i, '')
+    text.gsub!(/^(#{keys.join('|')})[ \t]*:[ \t]*(#{format})[:space:]*$/i, '')
     $2 && $2.strip
   end
 
@@ -348,7 +348,7 @@
   def cleanup_body(body)
     delimiters = Setting.mail_handler_body_delimiters.to_s.split(/[\r\n]+/).reject(&:blank?).map {|s| Regexp.escape(s)}
     unless delimiters.empty?
-      regex = Regexp.new("^[> ]*(#{ delimiters.join('|') })\s*[\r\n].*", Regexp::MULTILINE)
+      regex = Regexp.new("^[> ]*(#{ delimiters.join('|') })[:space:]*[\r\n].*", Regexp::MULTILINE)
       body = body.gsub(regex, '')
     end
     body.strip
diff -ur redmine-1.2.0.orig/app/models/repository/subversion.rb redmine-1.2.0/app/models/repository/subversion.rb
--- redmine-1.2.0.orig/app/models/repository/subversion.rb	2011-05-30 18:51:16.000000000 +0200
+++ redmine-1.2.0/app/models/repository/subversion.rb	2011-07-08 12:33:59.991489160 +0200
@@ -20,7 +20,7 @@
 class Repository::Subversion < Repository
   attr_protected :root_url
   validates_presence_of :url
-  validates_format_of :url, :with => /^(http|https|svn(\+[^\s:\/\\]+)?|file):\/\/.+/i
+  validates_format_of :url, :with => /^(http|https|svn(\+[^[:space:]:\/\\]+)?|file):\/\/.+/i
 
   def self.scm_adapter_class
     Redmine::Scm::Adapters::SubversionAdapter
diff -ur redmine-1.2.0.orig/app/models/setting.rb redmine-1.2.0/app/models/setting.rb
--- redmine-1.2.0.orig/app/models/setting.rb	2011-05-30 18:51:16.000000000 +0200
+++ redmine-1.2.0/app/models/setting.rb	2011-07-08 12:30:06.619489213 +0200
@@ -138,7 +138,7 @@
 
   # Helper that returns an array based on per_page_options setting
   def self.per_page_options_array
-    per_page_options.split(%r{[\s,]}).collect(&:to_i).select {|n| n > 0}.sort
+    per_page_options.split(%r{[[:space:],]}).collect(&:to_i).select {|n| n > 0}.sort
   end
 
   def self.openid?
diff -ur redmine-1.2.0.orig/app/models/user.rb redmine-1.2.0/app/models/user.rb
--- redmine-1.2.0.orig/app/models/user.rb	2011-05-30 18:51:16.000000000 +0200
+++ redmine-1.2.0/app/models/user.rb	2011-07-08 12:30:06.620489213 +0200
@@ -69,7 +69,7 @@
   validates_format_of :login, :with => /^[a-z0-9_\-@\.]*$/i
   validates_length_of :login, :maximum => 30
   validates_length_of :firstname, :lastname, :maximum => 30
-  validates_format_of :mail, :with => /^([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})$/i, :allow_nil => true
+  validates_format_of :mail, :with => /^([^@[:space:]]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})$/i, :allow_nil => true
   validates_length_of :mail, :maximum => 60, :allow_nil => true
   validates_confirmation_of :password, :allow_nil => true
   validates_inclusion_of :mail_notification, :in => MAIL_NOTIFICATION_OPTIONS.collect(&:first), :allow_blank => true
diff -ur redmine-1.2.0.orig/app/models/wiki_page.rb redmine-1.2.0/app/models/wiki_page.rb
--- redmine-1.2.0.orig/app/models/wiki_page.rb	2011-05-30 18:51:16.000000000 +0200
+++ redmine-1.2.0/app/models/wiki_page.rb	2011-07-08 12:33:48.833489160 +0200
@@ -38,7 +38,7 @@
   attr_accessor :redirect_existing_links
   
   validates_presence_of :title
-  validates_format_of :title, :with => /^[^,\.\/\?\;\|\s]*$/
+  validates_format_of :title, :with => /^[^,\.\/\?\;\|[:space:]]*$/
   validates_uniqueness_of :title, :scope => :wiki_id, :case_sensitive => false
   validates_associated :content
   
diff -ur redmine-1.2.0.orig/app/models/wiki.rb redmine-1.2.0/app/models/wiki.rb
--- redmine-1.2.0.orig/app/models/wiki.rb	2011-05-30 18:51:16.000000000 +0200
+++ redmine-1.2.0/app/models/wiki.rb	2011-07-08 12:30:06.621489213 +0200
@@ -86,7 +86,7 @@
   # turn a string into a valid page title
   def self.titleize(title)
     # replace spaces with _ and remove unwanted caracters
-    title = title.gsub(/\s+/, '_').delete(',./?;|:') if title
+    title = title.gsub(/[[:space:]]+/, '_').delete(',./?;|:') if title
     # upcase the first letter
     title = (title.slice(0..0).upcase + (title.slice(1..-1) || '')) if title
     title
